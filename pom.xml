<?xml version="1.0" encoding="UTF-8"?>
<!-- See documentation in resources/README.md -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- adapt to your project! -->
    <groupId>de.wwu.ulb.scdh</groupId>
    <artifactId>TEI-AG-Beispiele</artifactId>
    <version>0.2.0</version>

    <!-- adapt to your project! -->
    <name>Edition</name>
    <url>https://github.com/scdh/edition-data-template-cx</url>

    <!-- replace with your own! -->
    <organization>
        <name>Service Center of Digital Humanities, ULB, University of MÃ¼nster</name>
        <url>https://www.uni-muenster.de/SCDH/</url>
    </organization>

    <!-- adapt to your needs! -->
    <licenses>
        <license>
            <name>${exist.pkg.license}</name>
            <url>${exist.pkg.license.url}</url>
        </license>
    </licenses>

    <!-- adapt to your project! -->
    <scm>
        <connection>scm:git:${project.url}.git</connection>
        <developerConnection>scm:git:${project.url}.git</developerConnection>
        <url>scm:git:${project.url}.git</url>
        <tag>HEAD</tag>
    </scm>

    <properties>
        <repo.slotname>${project.artifactId}</repo.slotname>
       
        <!-- adapt this in order to find the TEI documents -->
        <tei.suffix>.TEI-P5.xml</tei.suffix>

        <!-- the schema's base filename without extension -->
        <schema.basename>tei_all</schema.basename>
        <!-- paths to schema files, derived from the basename -->
        <relaxng.schema>${project.basedir}/resources/schema/${schema.basename}.rng</relaxng.schema>
        <schematron.schema>${project.basedir}/resources/schema/${schema.basename}.sch</schematron.schema>

	<!-- transform TEI documents before packetizing to XAR -->
	<xar.transform.stylesheet>resources/xsl/id.xsl</xar.transform.stylesheet>
	<!-- true expands XIncludes, false does not -->
	<xar.transform.xincludeAware>false</xar.transform.xincludeAware>

	<!-- XML catalog for transformations and validations -->
	<xml.catalog>${project.basedir}/resources/catalog.xml</xml.catalog>

	<exist.pkg.user>tei</exist.pkg.user>
	<exist.pkg.group>tei</exist.pkg.group>
	<exist.pkg.permissions>rwxrwxrwx</exist.pkg.permissions>
	<exist.pkg.author>TODO</exist.pkg.author>
	<exist.pkg.license>CC0</exist.pkg.license>
	<exist.pkg.license.url>http://creativecommons.org/publicdomain/zero/1.0/</exist.pkg.license.url>
        <!-- this should be overridden with secrets in the CI/CD
             pipeline -->
	<exist.pkg.password>simple</exist.pkg.password>

        <!-- if deployed on gitlab, adapt this to your project -->
        <gitlab.instance>https://zivgitlab.uni-muenster.de</gitlab.instance>

	<!-- adapt to your needs! -->
	<repo.branch.uri.gitlab>${project.url}/-/tree/main</repo.branch.uri.gitlab>
	<repo.branch.uri.github>${project.url}/blob/main</repo.branch.uri.github>
	<repo.branch.uri>${repo.branch.uri.github}</repo.branch.uri>

	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <distribution.url.gitlab>${gitlab.instance}/api/v4/projects/${env.CI_PROJECT_ID}/packages/maven</distribution.url.gitlab>
        <ph.schematron.version>5.6.4</ph.schematron.version>
        <saxon.version>10.2</saxon.version>
        <oxygen.version>21.1.0.2</oxygen.version>
    </properties>

    <profiles>
        <profile>
            <!-- set secret user credentials from environment variable -->
            <id>ci/cd</id>
            <activation>
                <property>
                    <name>env.EXIST_DB_PERMISSIONS</name>
                </property>
            </activation>
            <properties>
                <!-- Override only if declared -->
                <exist.pkg.permissions>${env.EXIST_PKG_PERMISSIONS}</exist.pkg.permissions>
            </properties>
        </profile>
    </profiles>

    <!-- Optional: use gitlab repository for distributing packages -->
    <repositories>
        <repository>
            <id>gitlab-maven</id>
            <url>${distribution.url.gitlab}</url>
        </repository>
    </repositories>
    <distributionManagement>
        <repository>
            <id>gitlab-maven</id>
            <url>${distribution.url.gitlab}</url>
        </repository>
        <snapshotRepository>
            <id>gitlab-maven</id>
            <url>${distribution.url.gitlab}</url>
        </snapshotRepository>
    </distributionManagement>

    <pluginRepositories>
        <pluginRepository>
           <id>oxygenxml</id>
           <url>https://www.oxygenxml.com/maven/</url>
        </pluginRepository>
    </pluginRepositories>


    <dependencies>
        <dependency>
            <groupId>net.sf.saxon</groupId>
            <artifactId>Saxon-HE</artifactId>
            <version>${saxon.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <!-- Do not make a JAR-file! -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <groupId>org.apache.maven.plugins</groupId>
                <version>3.2.2</version>
                <executions>
                    <execution>
                        <id>default-jar</id>
                        <phase>none</phase>
                        <configuration>
                            <finalName>unwanted</finalName>
                            <classifier>unwanted</classifier>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <appendAssemblyId>false</appendAssemblyId>
                            <descriptors>
                                <!-- create XAR distribution for exist-db.
                                     Note: This actually creates a zip file.
                                     We have to rename it (see below with antrun). -->
                                <descriptor>resources/assembly.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <!-- change suffix of zip-file to .xar -->
                        <id>copy</id>
                        <phase>package</phase>
                        <configuration>
                            <target name="copy and rename file">
                                <copy
                                    file="${project.build.directory}/${project.artifactId}-${project.version}.zip"
                                    tofile="${project.build.directory}/${project.artifactId}-${project.version}.xar" />
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>mvn.log</id>
                        <phase>generate-sources</phase>
                        <configuration>
                            <target name="assert ${project.build.directory}/mvn.log">
                                <touch file="${project.build.directory}/mvn.log"/>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- testing wellformedness, schema correctness and transforming -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>xml-maven-plugin</artifactId>
                <version>1.0.2</version>
                <executions>
                    <execution>
		        <!-- generate schematron reports -->
                        <id>svrl-reports</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>transform</goal>
                        </goals>
                        <configuration>
                            <transformationSets>
                                <transformationSet>
                                    <dir>${project.basedir}</dir>
                                    <includes>
                                        <include>**/*${tei.suffix}</include>
                                    </includes>
                                    <excludes>
                                        <exclude>target/**</exclude>
                                        <exclude>resources/**</exclude>
                                        <exclude>templates/**</exclude>
                                        <exclude>samples/**</exclude>
                                        <exclude>Test/**</exclude>
                                    </excludes>
                                    <stylesheet>${project.build.directory}/schxslt/${schema.basename}.xslt</stylesheet>
                                    <fileMappers>
                                        <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                            <targetExtension>.${schema.basename}.svrl</targetExtension>
                                        </fileMapper>
                                    </fileMappers>
                                </transformationSet>
                            </transformationSets>
                        </configuration>
                    </execution>
                    <!-- ADAPT: add additional generations of schematron
                         reports here! Use the pattern from above. --> 
                    <execution>
		        <!-- transform schematron reports to html -->
                        <id>svrl2html</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>transform</goal>
                        </goals>
                        <configuration>
                            <transformationSets>
                                <transformationSet>
                                    <dir>${project.basedir}</dir>
                                    <includes>
                                        <include>**/*.svrl</include>
                                    </includes>
				    <excludes>
				       <exclude>target/**/target/**</exclude>
				    </excludes>
                                    <stylesheet>resources/xsl/svrl2html.xsl</stylesheet>
                                    <fileMappers>
                                        <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                            <targetExtension>.html</targetExtension>
                                        </fileMapper>
                                    </fileMappers>
                                </transformationSet>
                            </transformationSets>
                        </configuration>
                    </execution>
                    <execution>
                        <id>wellformedness and TEI schema</id>
                        <goals>
                            <goal>validate</goal>
                        </goals>
                        <phase>test</phase>
                        <configuration>
                            <catalogHandling>strict</catalogHandling>
                            <catalogs>
                                <catalog>${xml.catalog}</catalog>
                            </catalogs>
                            <validationSets>
                                <!-- wellformedness of all xml files in the house -->
                                <validationSet>
                                    <dir>${project.basedir}</dir>
                                    <includes>
                                        <include>**/*${tei.suffix}</include>
                                        <include>**/*.xsl</include>
                                        <include>**/*.xml</include>
                                    </includes>
                                </validationSet>
                                <!-- TEI schema validation -->
                                <!-- https://www.mojohaus.org/xml-maven-plugin/examples/validate-relaxng.html -->
                                <validationSet>
                                    <dir>${project.basedir}</dir>
                                    <includes>
                                        <include>**/*${tei.suffix}</include>
                                    </includes>
                                    <excludes>
                                        <exclude>target/**</exclude>
                                        <exclude>resources/**</exclude>
                                        <exclude>templates/**</exclude>
                                        <exclude>Test/**</exclude>
                                        <exclude>samples/**</exclude>
                                    </excludes>
                                    <systemId>${relaxng.schema}</systemId>
                                    <validating>true</validating>
                                    <schemaLanguage>http://relaxng.org/ns/structure/1.0</schemaLanguage>
                                    <xincludeAware>true</xincludeAware>
                                </validationSet>
                            </validationSets>
                        </configuration>
                    </execution>
                    <execution>
                        <id>transform</id>
                        <goals>
                            <goal>transform</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <catalogs>
                                <catalog>${xml.catalog}</catalog>
                            </catalogs>
                            <transformationSets>
                                <!-- transform TEI documents before
				     making a XAR package -->
                                <transformationSet>
                                    <dir>${project.basedir}</dir>
                                    <includes>
                                        <include>**/*${tei.suffix}</include>
                                    </includes>
                                    <excludes>
                                        <exclude>target/**</exclude>
                                        <exclude>resources/**</exclude>
                                        <exclude>samples/**</exclude>
                                        <exclude>templates/**</exclude>
                                        <exclude>Test/**</exclude>
                                    </excludes>
                                    <stylesheet>${xar.transform.stylesheet}</stylesheet>
                                    <xincludeAware>${xar.transform.xincludeAware}</xincludeAware>
                                </transformationSet>
                            </transformationSets>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
		   <!-- we use a patched XML Parser, because Xerces
		        doesn't support XInclude by IDs other than
		        from DTD, see
		        https://xerces.apache.org/xerces2-j/faq-xinclude.html#faq-7
		        -->
		   <dependency>
		      <groupId>com.oxygenxml</groupId>
		      <artifactId>oxygen-patched-xerces</artifactId>
		      <version>${oxygen.version}</version>
		   </dependency>
                    <dependency>
                        <groupId>net.sf.saxon</groupId>
                        <artifactId>Saxon-HE</artifactId>
                        <version>${saxon.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>com.componentcorp.xml.validation</groupId>
                        <artifactId>jxvc</artifactId>
                        <version>0.9.4</version>
                    </dependency>
                    <dependency>
                        <groupId>com.componentcorp.xml.validation</groupId>
                        <artifactId>relaxng</artifactId>
                        <version>0.9.4</version>
                    </dependency>
                    <!-- https://mvnrepository.com/artifact/xml-resolver/xml-resolver -->
                    <dependency>
                        <groupId>xml-resolver</groupId>
                        <artifactId>xml-resolver</artifactId>
                        <version>1.2</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- schematron validation -->
            <plugin>
                <groupId>com.helger.maven</groupId>
                <artifactId>ph-schematron-maven-plugin</artifactId>
                <version>${ph.schematron.version}</version>
                <executions>
                    <execution>
                        <id>sch2xslt</id>
                        <goals>
                            <goal>convert</goal>
                        </goals>
                        <configuration>
                            <schematronDirectory>${basedir}/resources/schema</schematronDirectory>
                            <xsltDirectory>${project.build.directory}/schxslt</xsltDirectory>
                            <languageCode>de</languageCode>
                        </configuration>
                    </execution>
                    <execution>
                        <id>schematron-validation</id>
                        <goals>
                            <goal>validate</goal>
                        </goals>
                        <phase>test</phase>
                        <configuration>
                            <schematronProcessingEngine>schematron</schematronProcessingEngine>
                            <schematronFile>${schematron.schema}</schematronFile>
                            <xmlDirectory>${project.basedir}</xmlDirectory>
                            <xmlExcludes>${project.build.directory}/**</xmlExcludes>
                            <xmlIncludes>**/*${tei.suffix}</xmlIncludes>
                            <svrlDirectory>${project.build.directory}/schematron-reports/${schema.basename}</svrlDirectory>
                            <failFast>false</failFast>
                        </configuration>
                    </execution>
                    <!-- ADAPT: add other schematron validations here! -->
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>com.helger</groupId>
                        <artifactId>ph-schematron</artifactId>
                        <version>${ph.schematron.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <!-- For xslt that starts with a named template or for
                     xqueries, the exec-maven-plugin has to be used. -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>mvnlog.xml</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>net.sf.saxon.Transform</mainClass>
                            <arguments>
                                <argument>-xsl:resources/xsl/mvn2xml.xsl</argument>
                                <argument>-it:start</argument>
                                <argument>-o:${project.build.directory}/mvnlog.xml</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>errors.html</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>net.sf.saxon.Query</mainClass>
                            <arguments>
                                <argument>-q:${project.basedir}/resources/xql/svrl2htindex.xql</argument>
                                <argument>-o:${project.build.directory}/index.html</argument>
                                <argument>project-title=${project.name}</argument>
                                <argument>repo-branch-uri=${repo.branch.uri}</argument>
                                <argument>mvnlog-file=${project.build.directory}/mvnlog.xml</argument>
                                <argument>basedir=${project.build.directory}/generated-resources/xml/xslt</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>net.sf.saxon</groupId>
                        <artifactId>Saxon-HE</artifactId>
                        <version>${saxon.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

        </plugins>
    </build>

</project>
